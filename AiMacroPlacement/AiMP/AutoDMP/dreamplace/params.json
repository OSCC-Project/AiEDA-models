{
    "aux_input": {
        "description": "input .aux file",
        "default": "",
        "required": "required for Bookshelf"
    },
    "lef_input": {
        "description": "input LEF file",
        "default": "",
        "required": "required for LEF/DEF"
    },
    "def_input": {
        "description": "input DEF file",
        "default": "",
        "required": "required for LEF/DEF"
    },
    "verilog_input": {
        "description": "input VERILOG file, provide circuit netlist information if it is not included in DEF file",
        "default": "",
        "required": "optional for LEF/DEF"
    },
    "gpu": {
        "description": "enable gpu or not",
        "default": 1
    },
    "gpu_id": {
        "description": "which gpu to use",
        "default": 0
    },
    "num_bins_x": {
        "description": "number of bins in horizontal direction",
        "default": 512
    },
    "num_bins_y": {
        "description": "number of bins in vertical direction",
        "default": 512
    },
    "global_place_stages": {
        "description": "global placement configurations of each stage, a dictionary of {\"num_bins_x\", \"num_bins_y\", \"iteration\", \"learning_rate\", \"learning_rate_decay\", \"wirelength\", \"optimizer\", \"Llambda_density_weight_iteration\", \"Lsub_iteration\"}",
        "default": [
            {
                "num_bins_x": 512,
                "num_bins_y": 512,
                "iteration": 3000,
                "learning_rate": 0.01,
                "wirelength": "weighted_average",
                "optimizer": "Nesterov",
                "Llambda_density_weight_iteration": 1,
                "Lsub_iteration": 1,
                "learning_rate_decay": 1.0
            }
        ],
        "required": "required"
    },
    "target_density": {
        "description": "target density",
        "default": 0.8
    },
    "density_weight": {
        "description": "initial weight of density cost",
        "default": 8e-5
    },
    "random_seed": {
        "description": "random seed",
        "default": 5000
    },
    "result_dir": {
        "description": "result directory for output",
        "default": "results"
    },
    "scale_factor": {
        "description": "scale factor to avoid numerical overflow; 0.0 means not set",
        "default": 0.0
    },
    "ignore_net_weight": {
        "description": "ignore net weight larger than some value for weight_hpwl reporting",
        "default": 10
    },
    "shift_factor": {
        "description": "shift factor to avoid numerical issues when the lower-left origin of rows is not (0, 0);",
        "default": [
            0.0,
            0.0
        ]
    },
    "ignore_net_degree": {
        "description": "ignore net degree larger than some value",
        "default": 100
    },
    "gp_noise_ratio": {
        "description": "noise to initial positions for global placement",
        "default": 0.025
    },
    "enable_fillers": {
        "description": "enable filler cells",
        "default": 1
    },
    "global_place_flag": {
        "description": "whether use global placement",
        "default": 1
    },
    "legalize_flag": {
        "description": "whether use internal legalization",
        "default": 1
    },
    "detailed_place_flag": {
        "description": "whether use internal detailed placement",
        "default": 1
    },
    "stop_overflow": {
        "description": "stopping criteria, consider stop when the overflow reaches to a ratio",
        "default": 0.1
    },
    "dtype": {
        "description": "data type, float32 | float64",
        "default": "float32"
    },
    "detailed_place_engine": {
        "description": "external detailed placement engine to be called after placement",
        "default": ""
    },
    "detailed_place_command": {
        "description": "commands for external detailed placement engine",
        "default": "-nolegal -nodetail"
    },
    "plot_flag": {
        "description": "whether plot solution or not",
        "default": 0
    },
    "RePlAce_ref_hpwl": {
        "description": "reference HPWL used in RePlAce for updating density weight",
        "default": 350000
    },
    "RePlAce_LOWER_PCOF": {
        "description": "lower bound ratio used in RePlAce for updating density weight",
        "default": 0.95
    },
    "RePlAce_UPPER_PCOF": {
        "description": "upper bound ratio used in RePlAce for updating density weight",
        "default": 1.05
    },
    "gamma": {
        "description": "base coefficient for log-sum-exp and weighted-average wirelength, a relative value to bin size",
        "default": 4.0
    },
    "RePlAce_skip_energy_flag": {
        "description": "whether skip density energy computation for fast mode, may not work with some solvers",
        "default": 0
    },
    "random_center_init_flag": {
        "description": "whether perform random initialization for global placement",
        "default": 1
    },
    "init_loc_perc_x": {
        "description": "initial horizontal location of cells for global placement (% of layout width)",
        "default": 0.5
    },
    "init_loc_perc_y": {
        "description": "initial vertical location of cells for global placement (% of layout height)",
        "default": 0.5
    },
    "sort_nets_by_degree": {
        "description": "whether sort nets by degree or not",
        "default": 0
    },
    "num_threads": {
        "description": "number of CPU threads",
        "default": 8
    },
    "dump_global_place_solution_flag": {
        "description": "whether dump intermediate global placement solution as a compressed pickle object",
        "default": 0
    },
    "dump_legalize_solution_flag": {
        "description": "whether dump intermediate legalization solution as a compressed pickle object",
        "default": 0
    },
    "routability_opt_flag": {
        "description": "whether enable routability optimization",
        "default": 0
    },
    "route_num_bins_x": {
        "description": "number of routing grids/tiles",
        "default": 512
    },
    "route_num_bins_y": {
        "description": "number of routing grids/tiles",
        "default": 512
    },
    "node_area_adjust_overflow": {
        "description": "the overflow where to adjust node area",
        "default": 0.15
    },
    "max_num_area_adjust": {
        "description": "maximum times to adjust node area",
        "default": 3
    },
    "adjust_nctugr_area_flag": {
        "description": "whether use NCTUgr congestion map to guide area adjustment",
        "default": 0
    },
    "adjust_rudy_area_flag": {
        "description": "whether use RUDY/RISA map to guide area adjustment",
        "default": 1
    },
    "adjust_pin_area_flag": {
        "description": "whether use pin utilization map to guide area adjustment",
        "default": 1
    },
    "area_adjust_stop_ratio": {
        "description": "area_adjust_stop_ratio",
        "default": 0.01
    },
    "route_area_adjust_stop_ratio": {
        "description": "route_area_adjust_stop_ratio",
        "default": 0.01
    },
    "pin_area_adjust_stop_ratio": {
        "description": "pin_area_adjust_stop_ratio",
        "default": 0.05
    },
    "unit_horizontal_capacity": {
        "description": "number of horizontal routing tracks per unit distance",
        "default": 1.5625
    },
    "unit_vertical_capacity": {
        "description": "number of vertical routing tracks per unit distance",
        "default": 1.45
    },
    "unit_pin_capacity": {
        "description": "number of pins per unit area",
        "default": 0.058
    },
    "max_route_opt_adjust_rate": {
        "description": "max_route_opt_adjust_rate",
        "default": 2.0
    },
    "route_opt_adjust_exponent": {
        "description": "exponent to adjust the routing utilization map",
        "default": 2.0
    },
    "pin_stretch_ratio": {
        "description": "pin_stretch_ratio",
        "default": 1.414213562
    },
    "max_pin_opt_adjust_rate": {
        "description": "max_pin_opt_adjust_rate",
        "default": 1.5
    },
    "deterministic_flag": {
        "description": "whether require run-to-run determinism, may have efficiency overhead",
        "default": 0
    },
    "get_congestion_map": {
        "description": "compute congestion map after placement complete",
        "default": 0
    },
    "macro_halo_x": {
        "description": "horizontal halo around movable macros",
        "default": 1000
    },
    "macro_halo_y": {
        "description": "vertical halo around movable macros",
        "default": 1000
    },
    "macro_overlap_flag": {
        "description": "whether enable MFP macro overlap",
        "default": 0
    },
    "macro_overlap_weight": {
        "description": "initial weight of macro overlap cost",
        "default": 8e-6
    },
    "macro_overlap_mult_weight": {
        "description": "weight multiplier for MFP macro overlap",
        "default": 1
    },
    "macro_padding_x": {
        "description": "horizontal padding around macros for MFP macro overlap",
        "default": 0
    },
    "macro_padding_y": {
        "description": "vertical padding around macros for MFP macro overlap",
        "default": 0
    },
    "bndry_padding_x": {
        "description": "horizontal padding around the edges of the floorplan",
        "default": 0
    },
    "bndry_padding_y": {
        "description": "vertical padding around the edges of the floorplan",
        "default": 0
    },
    "pin_density": {
        "description": "target pin density for cells inflation",
        "default": -1
    },
    "route_info_input": {
        "description": "route information file (w. total H/V routing length & macro routing length contribution)",
        "default": ""
    },
    "evaluate_pl": {
        "description": "evaluate .pl file without running anything (e.g., to get baseline PPA)",
        "default": 0
    },
    "risa_weights": {
        "description": "whether use weighted smooth HPWL with RISA net weights",
        "default": 0
    },
    "macro_pin_halo_x": {
        "description": "whether use weighted smooth HPWL with RISA net weights",
        "default": 1000
    },
    "macro_pin_halo_y": {
        "description": "whether use weighted smooth HPWL with RISA net weights",
        "default": 1000
    },
    "with_sta": {
        "description": "Open STA for Place",
        "default": 1
    }
}